#!/usr/bin/env sh

#############################
#Description
#
#Customize ArchLinux/Manjaro operating system
#############################

#############################
#Variables
#############################

AUX1=$1
AUX2=$2
AUX3=$3

PATH_DIRECTORY_APPIMAGE="$HOME/Applications/"
PATH_DIRECTORY_COMPILATION="$HOME/compilation/"

MESSAGE_HELP="Display this help message"

MESSAGE_ERROR="Invalid option for $0!\n$MESSAGE_HELP"

#############################
#Functions
#############################

display_message(){
    echo -e "##############################$1\n#############################"
}

download_file(){
    #curl -L -O $1
    wget -c $1
}

system_update(){
    #Atualizar o sistema operacional
    sudo pacman -Sy
    sudo pacman-mirrors -f
    sudo pacman -Syyuu
}

system_configure_repositories(){
    system_install_pacman_compilers

    #Instalar Paru
    mkdir -p $PATH_DIRECTORY_COMPILATION/
    cd $PATH_DIRECTORY_COMPILATION/
    git clone https://aur.archlinux.org/paru.git
    cd paru
    makepkg -si
}

system_install_pacman_compilers(){
    sudo pacman -S --needed base-devel --noconfirm
}

system_install_pacman_softwares(){
	#Instalar softwares essenciais
	sudo pacman -S cheese --noconfirm
	sudo pacman -S mpv --noconfirm
	sudo pacman -S firejail --noconfirm
	sudo pacman -S redshift --noconfirm
	sudo pacman -S timeshift --noconfirm #Software para gerenciar backups
	sudo pacman -S vim --noconfirm
}

system_install_aur_softwares(){
    paru -S google-chrome
}

#MUST BE FIXED
system_setting_touchpad_gestures(){
	#Installing softwares and libraries
	sudo pacman -S xdotool
	sudo pacman -S libinput
	sudo pacman -S libinput-gestures
	sudo pacman -S gestures
	sudo pacman -S xf86-input-synaptics

	#Add current user to input group
	sudo gpasswd -a $USER input

    display_message "Current session must be restarted for continuing the processure"

	#Enable services
	libinput-gestures-setup start
	libinput-gestures-setup autostart

    #Apply settings (for KDE PLASMA 5)
    echo -e "# Generated by Gestures 0.2.5  -->  https://gitlab.com/cunidev/gestures
    # Manual editing might result in data loss!


    # Invalid lines


    # Unsupported lines

    # Swipe threshold (0-100)
    swipe_threshold 25

    # Gestures
    gesture pinch out 2 xdotool key Super+equal             #Zoom in
    gesture pinch in 2 xdotool key Super+minus              #Zoom out
    gesture swipe up 3 xdotool key Super+w                  #Maximize current window
    gesture swipe left 3 xdotool key Super+Left             #Move current window to left side
    gesture swipe right 3 xdotool key Super+Right           #Move current window to right side
    gesture swipe down 3 xdotool key Super+Alt+Down         #Minimize current window
    gesture swipe up 4 xdotool key Control+0xffc7 #F10      #Display an overview from all windows on all desktops
    gesture swipe down 4 xdotool key Control+0xffc6 #F9     #Display an overview from all windows on current desktops" > $HOME/.config/libinput-gestures.conf
}

#MUST BE FIXED
system_setting_virtualmachine(){
    #https://boseji.com/posts/manjaro-kvm-virtmanager/

    #QEMU installation
    sudo pacman -S qemu qemu-arch-extra ovmf bridge-utils dnsmasq vde2 openbsd-netcat ebtables iptables

    #Virt-Manager and Libvirtd service install
    sudo pacman -S virt-manager virt-viewer

    #Start the Services

    #Enable auto-start of the service and also start it in the current session
    sudo systemctl enable --now libvirtd.service
    
    #Check Systemd service status
    sudo systemctl status libvirtd.service

    #Configure the KVM
    #sudo nano -cl /etc/libvirt/libvirtd.conf
    sudo vim /etc/libvirt/libvirtd.conf

    #Uncomment the line 81 or so:
    #unix_sock_group = "libvirt"
    #
    #Uncomment the line 104 or so:
    #unix_sock_rw_perms = "0770"

    #Creating an New Network Bridge for VM
    echo -e "<network>\n\t<name>br10</name>\n\t<forward mode='nat'>\n\t\t<nat>\n\t\t<port start='1024' end='65535'/>\n\t\t</nat>\n\t</forward>\n\t<bridge name='br10' stp='on' delay='0'/>\n\t<ip address='192.168.72.1' netmask='255.255.255.0'>\n\t\t<dhcp>\n\t\t<range start='192.168.72.50' end='192.168.72.200'/>\n\t\t</dhcp>\n\t</ip>\n</network>" > /tmp/br10.xml #Create the Bridge description file

    #Register the Bridge Network
    sudo virsh net-define /tmp/br10.xml

    #Start the Bridge
    sudo virsh net-start br10

    #If you want to permanently enable the new network bridge, so that it Autostart at boot:
    #sudo virsh net-autostart br10

    #Permissions for current user
    sudo usermod -a -G libvirt $(whoami)

    display_message "Current session must be restarted for continuing the processure"
}

#MUST BE FIXED
system_setting_customization_system_fonts(){
    #Firacode font
	wget https://github.com/tonsky/FiraCode/releases/download/5.2/Fira_Code_v5.2.zip
}

#MUST BE FIXED
system_setting_customization_softwares_ghostwriter(){
    #https://wereturtle.github.io/ghostwriter/download.html#linux
    #https://draculatheme.com/ghostwriter
}

#MUST BE FIXED
system_setting_customization_softwares_kate(){
	#Download Dracula theme
	download_file https://raw.githubusercontent.com/dracula/kate/master/dracula.kateschema
    display_message "For activating theme in Kate's settings, go to Fonts and Colors and click 'Import' to import the schema"
}

appimages(){
    mkdir -p $PATH_DIRECTORY_APPIMAGE/
    cd $PATH_DIRECTORY_APPIMAGE/
    
    #eDEX-UI
    download_file https://github.com/GitSquared/edex-ui/releases/download/v2.2.7/eDEX-UI-Linux-x86_64.AppImage
    chmod +x ./eDEX-UI-Linux-x86_64.AppImage
    #chmod a+x ./eDEX-UI-Linux-x86_64.AppImage
    #sudo ./eDEX-UI-Linux-x86_64.AppImage --install
    
	#Visual Studio Codium
	download_file https://github.com/VSCodium/vscodium/releases/download/1.58.1/VSCodium-1.58.1-1626221619.glibc2.17-x86_64.AppImage
	chmod +x ./VSCodium-1.59.0-1628208101.glibc2.17-x86_64.AppImage
    
	#OpenBoard
	download_file https://dl3.pling.com/api/files/download/j/eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjE2MTczNDg1MjYiLCJ1IjpudWxsLCJsdCI6ImRvd25sb2FkIiwicyI6IjNlODllODdlZWM1NTYxYzdmNTU2OWM4MzVmMjA0ZGRlNzQxOTEyNzRkNTIzZGYxNTIwOTZiMTM3MDVjYjZhN2RmZjU1NzQzN2EyYjljNzA2ZDZhMzIwN2Y4NmZiYmZiOGE2ZGE3OWVmMGU3NDUwZTdiNjRjNWY1ZGQzNTdhMzE4IiwidCI6MTYyOTAwNzg4MCwic3RmcCI6IjdmOGMzMmNmM2ZlMDM1Njk0ZGFjNDE1NDFjYTZlODZiIiwic3RpcCI6IjE5MS4xNjMuMTM5LjE1NyJ9.gSa1t60kP0w-F3br6zfLB2CgNXvnzpHxb5ltRlQfNdI/OpenBoard154.AppImage
    
    #LibreOffice
    download_file https://libreoffice.soluzioniopen.com/stable/standard/LibreOffice-fresh.standard-x86_64.AppImage

    #Microsoft Teams
    download_file https://github.com/IsmaelMartinez/teams-for-linux/releases/download/v1.0.9/teams-for-linux-1.0.9.AppImage

    #OnlyOffice
    download_file https://github.com/ONLYOFFICE/appimage-desktopeditors/releases/download/v6.3.1/DesktopEditors-x86_64.AppImage

    #Zoom
    download_file https://github.com/probonopd/Zoom.AppImage/releases/download/stable/Zoom-5.7.29123.0808.glibc2.17-x86_64.AppImage
}

#############################
#Calling the functions
#############################

#display_message
#download_file
#system_update
#system_configure_repositories
#system_install_pacman_compilers
#system_install_pacman_softwares
#system_install_aur_softwares
#system_setting_touchpad_gestures
#system_setting_virtualmachine
#system_setting_customization_system_fonts
#system_setting_customization_softwares_ghostwriter
#system_setting_customization_softwares_kate
#appimages

#case $AUX1 in
	#"" | "-h" | "--help" | "-?") echo -e "$MESSAGE_HELP" ;;
	#"-a" | "--all") fazer_tudo ;;
	#"-ia" | "--instalar-appimage") instalar_softwares_appimage ;;
	#"-ip" | "--instalar-pacman") instalar_softwares_pacman ;;
	#"-ca" | "--configurar-aur") instalacao_aur ;;
	#"-su" | "--sistema-update") atualizar_sistema ;;
	#"-" | "--") 
	#*) echo -e "$MESSAGE_ERROR" ;;
#esac